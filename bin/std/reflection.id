/**
 * Provides reflection
 * @module std/reflection
 * @author SplittyDev
 */

global __STDLIB = true
global __STDLIB_REFLECTION = true

 # TODO: Fix weird string behavior
 # type(Str) == null

func typedef (obj) {
    try {
        if (obj == Str) {
            return true
        }
    } except { }
    return obj is TypeDef
}

func instance (obj) {
    try {
        return typedef (type (obj))
    } except { }
    return false
}

func instanceof (T, obj) {
    try {
        if (!typedef (T)) {
            raise TypeException ("T", "TypeDef")
        }
        return obj is T
    } except { }
    return false
}

func nameof (a) {
    try {
        if (obj is Str || obj == Str) {
            return "Str"
        }
    } except { }
    return a.__name__
}