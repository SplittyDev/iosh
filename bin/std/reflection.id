/**
 * Provides reflection
 * @module std/reflection
 * @author SplittyDev
 */

# <-- stdlib include guard -----------
try{if(__STDLIB);}
except{global __STDLIB=true}
try{if(!__STDLIB_REFLECTION)
global __STDLIB_REFLECTION=true}
except{global __STDLIB_REFLECTION=true}
# --- stdlib include guard ---------->

 # TODO: Fix weird string behavior
 # type(Str)?

func istypedef (obj) {
    return nameof (TypeDef) == nameof (obj)
}

func instance (obj) {
    return istypedef (type (type (obj)))
}

func instanceof (T, obj) {
    if (!istypedef (T)) {
        raise TypeException ("T", "TypeDef")
    }
    return type (T) != type (obj) && nameof (T) == nameof (obj)
}

func nameof (a) {
    return a.__name__
}